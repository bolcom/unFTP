language: rust

services:
  - docker

rust:
  - stable
  - beta
  - nightly

os:
  - linux
  - osx

before_install:
  - if (test -n "$TRAVIS_TAG" && test "$TRAVIS_RUST_VERSION" = "stable" && test "$TRAVIS_OS_NAME" = "linux"); then export DEPLOY=true; else export DEPLOY=false; fi
  - if $DEPLOY; then (sudo apt-get update && sudo apt-get install -y musl-dev musl-tools); fi

before_script:
  - if $DEPLOY; then rustup target add x86_64-unknown-linux-musl; fi

script:
  - cargo build --verbose --workspace --features rest_auth,jsonfile_auth,cloud_storage
  - cargo test --verbose --workspace --features rest_auth,jsonfile_auth,cloud_storage
  - if $DEPLOY; then cargo test --verbose --workspace --all-features --target=x86_64-unknown-linux-musl; else true; fi
  - if $DEPLOY; then make docker-image; else true; fi

deploy:
  provider: script
  script: if $DEPLOY; then (echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin && docker push bolcom/unftp); else true; fi
  on:
    tags: true

cache: cargo

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true
